



name: SonarQube Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'   # <-- Your project version

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: SonarQube begin analysis
      run: |
        dotnet sonarscanner begin \
          /o:"deesubainsla" \
          /k:"Deesubainsla_Nunit_AutomateTesting" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Build project
      run: dotnet build

    - name: Run tests
      run: dotnet test

    - name: SonarQube end analysis
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"


    # new changes for email functionality


    # âœ… Wait to ensure SonarCloud finished processing the analysis
    - name: Wait for SonarCloud processing
      run: |
       echo "Waiting for 60s to complete the sonar test"
       sleep 60

    # âœ… Fetch metrics and issues from SonarCloud API
    - name: Fetch SonarCloud analysis data
      id: fetch_sonar
      run: |
        echo "Fetching data from sonar API"
        PROJECT_KEY="Deesubainsla_Nunit_AutomateTesting"
        SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}"

        # Fetch metrics
        curl -s -u "$SONAR_TOKEN:" "https://sonarcloud.io/api/measures/component?component=${PROJECT_KEY}&metricKeys=bugs,vulnerabilities,code_smells,coverage,duplicated_lines_density" \
          -o sonar_metrics.json

        # Fetch issues (first 100 issues)
        curl -s -u "$SONAR_TOKEN:" "https://sonarcloud.io/api/issues/search?componentKeys=${PROJECT_KEY}&ps=100" \
          -o sonar_issues.json

    # âœ… Create a readable Markdown summary report
    - name: Create SonarCloud summary report
      run: |
        echo "# SonarCloud Analysis Summary" > sonar_report.md
        echo "" >> sonar_report.md

        echo "## Metrics" >> sonar_report.md
        jq -r '.component.measures[] | "- \(.metric): \(.value)"' sonar_metrics.json >> sonar_report.md

        echo "" >> sonar_report.md
        echo "## All Issues" >> sonar_report.md
        jq -r '.issues[] | "- [\(.severity)] \(.message) (File: \(.component // "N/A"), Line: \(.line // "N/A"))"' sonar_issues.json >> sonar_report.md


        echo "" >> sonar_report.md
        echo "[ðŸ”Ž View full SonarCloud report](https://sonarcloud.io/project/overview?id=Deesubainsla_Nunit_AutomateTesting)" >> sonar_report.md

    # âœ… Email the summary report
    - name: Send email with SonarCloud report
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: "deesubainsla340@gmail.com"
        password: "xfzv yjol wxtz qmhj"
        subject: "SonarCloud Analysis Report - ${{ github.repository }}"
        to: "dinesh.kumar@rdsolutions.in"
        from: "Sonar_Test Report from Dinesh<deesubainsla340@gmail.com>"
        body: |
          Hi,

          Please find attached the summary report from SonarCloud analysis.

          Thanks,
          CI Bot
        attachments: sonar_report.md
